<?php
/**
 * 权限控制
 * @author mybsdc <mybsdc@gmail.com>
 * @date 2017/7/29
 * @time 11:06
 */

namespace app\home\controller;

use think\Db;
use think\Request;
use think\Validate;
use app\home\controller\common\Base;

class Access extends Base
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->access = model('Access');
    }

    // 权限列表
    public function index()
    {
        $data = $this->access->getAllAccess();
        $this->assign('data', $data);
        return $this->fetch('access/index');
    }

    // 添加或编辑权限
    public function setAccess()
    {
        if (Request::instance()->isGet()) { // get请求展示页面
            $id = input('get.id', 0);
            $info = [];
            if ($id) {
                $info = $this->access->accessInfo($id);
                $info->url = implode("\n", json_decode($info->url)); // 还原网址信息
            }
            $this->assign('info', $info);
            return $this->fetch('access/setAccess');
        } else if (Request::instance()->isPost()) { // post请求处理添加或编辑
            $data = input('post.');
            $data['title'] = trim($data['title']);
            $data['url'] = trim($data['url']);
            $id = input('post.id', 0);

            // 验证规则 - tp默认若无值则不验证，故尽量都设置必填
            $rule = [
                ['title', 'require|min:2|max:8', '请输入权限标题|标题的最小长度为2个字符|标题不能超过8个字符'],
                ['url', 'require|max:200', '你还没有输入地址呢|地址不能超过100个字符'],
            ];
            $validate = new Validate($rule);
            if (!$validate->check($data)) { // 开始验证
                return json(['code' => -1, 'tips' => $validate->getError()]);
            }

            // 判断权限标题是否已存在
            $haveAccess = Db::name('access')->where(['title' => $data['title']])->where('id', '<>', $id)->count(); // 加id<>$id条件为排除本身
            if ($haveAccess) {
                return json(['code' => -1, 'tips' => '该权限标题已存在，请输入一个新权限标题']);
            }

            $data['url'] = json_encode(explode("\n", $data['url'])); // \n表示换行，以换行为分隔符。\n需要被解析，故必须双引号引起。最终以json格式保存。
            if ($id) { // 编辑操作 - 前台查询的结果有值才会提交id过来，故此处可以省略一次查询
                $data['update_time'] = time();
                $result = $this->access->updateAccess($data);
            } else { // 添加操作
                $data['create_time'] = time();
                $result = $this->access->addAccess($data); // 返回自增id或false
            }

            if ($result) {
                $tipsArray = ['哈哈', '恭喜', '真厉害', '哟西', '没错', '啦啦啦', '可以的', '小伙子'];
                $tip = $tipsArray[mt_rand(0, count($tipsArray) - 1)];
                return json(['code' => 200, 'tips' => $tip . '，操作成功']);
            } else {
                return json(['code' => -1, 'tips' => '哎呀，出错了，过一会再试试吧']);
            }
        } else {
            return $this->error('非法操作！');
        }
    }
}